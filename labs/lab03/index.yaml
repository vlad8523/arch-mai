---
openapi: 3.0.0
info:
  title: BlaBla lab
  version: 0.1.0
servers:
  - url: http://localhost:8000
paths:
  /user/:
    post:
      summary: Create User
      operationId: create_user_user__post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserCreate"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/UserInDB"
                - type: 'null'
                title: Response Create User User  Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  /user/{user_id}:
    get:
      summary: Get User
      operationId: get_user_user__user_id__get
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
          title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/UserInDB"
                - type: 'null'
                title: Response Get User User  User Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    patch:
      summary: Update User
      operationId: update_user_user__user_id__patch
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
          title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserCreate"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/UserInDB"
                - type: 'null'
                title: Response Update User User  User Id  Patch
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      summary: Delete User
      operationId: delete_user_user__user_id__delete
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
          title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                - "$ref": "#/components/schemas/UserInDB"
                - type: 'null'
                title: Response Delete User User  User Id  Delete
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  /user/test-data:
    post:
      summary: Create Test Data
      operationId: create_test_data_user_test_data_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /route:
    post:
      summary: Create Route
      operationId: create_route_route_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateRoute"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Route Route Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  /route/passengers/{route_id}:
    put:
      summary: Update Passengers List
      operationId: update_passengers_list_route_passengers__route_id__put
      parameters:
      - name: route_id
        in: path
        required: true
        schema:
          type: string
          title: Route Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatePassengerList"
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Route"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/route/{route_id}":
    get:
      summary: Read Route By Id
      operationId: read_route_by_id_route__route_id__get
      parameters:
      - name: route_id
        in: path
        required: true
        schema:
          type: string
          title: Route Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Route"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/route{route_id}":
    delete:
      summary: Delete Route By Id
      operationId: delete_route_by_id_route_route_id__delete
      parameters:
      - name: route_id
        in: path
        required: true
        schema:
          type: string
          title: Route Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/route/test-data":
    post:
      summary: Create Test Data
      operationId: create_test_data_route_test_data_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    CreateRoute:
      properties:
        start_point:
          type: string
          title: Start Point
        destination_point:
          type: string
          title: Destination Point
        driver_id:
          type: integer
          title: Driver Id
          default: -1
        passenger_list:
          items:
            type: integer
          type: array
          title: Passenger List
          default: []
      type: object
      required:
      - start_point
      - destination_point
      title: CreateRoute
    HTTPValidationError:
      properties:
        detail:
          items:
            "$ref": "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Route:
      properties:
        start_point:
          type: string
          title: Start Point
        destination_point:
          type: string
          title: Destination Point
        driver_id:
          type: integer
          title: Driver Id
          default: -1
        passenger_list:
          items:
            type: integer
          type: array
          title: Passenger List
          default: []
        id:
          type: string
          title: Id
      type: object
      required:
      - start_point
      - destination_point
      - id
      title: Route
    UpdatePassengerList:
      properties:
        passenger_list:
          items:
            type: integer
          type: array
          title: Passenger List
      type: object
      required:
      - passenger_list
      title: UpdatePassengerList
    UserCreate:
      properties:
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        email:
          type: string
          title: Email
        first_name:
          type: string
          title: First Name
        second_name:
          type: string
          title: Second Name
        is_driver:
          type: boolean
          title: Is Driver
      type: object
      required:
      - username
      - password
      - email
      - first_name
      - second_name
      - is_driver
      title: UserCreate
    UserInDB:
      properties:
        id:
          type: integer
          title: Id
        email:
          type: string
          title: Email
        first_name:
          type: string
          title: First Name
        second_name:
          type: string
          title: Second Name
        is_driver:
          type: boolean
          title: Is Driver
        username:
          type: string
          title: Username
        hashed_password:
          type: string
          title: Hashed Password
      additionalProperties: true
      type: object
      required:
      - id
      - email
      - first_name
      - second_name
      - is_driver
      - username
      - hashed_password
      title: UserInDB
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
